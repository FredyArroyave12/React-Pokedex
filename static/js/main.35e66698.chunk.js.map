{"version":3,"sources":["utils.js","redux/actions/pokemonActions.js","redux/reducers/pokemonReducer.js","redux/actions/navBarActions.js","redux/reducers/navBarReducer.js","redux/reducers/index.js","redux/store.js","images/pokeInfo.png","components/statsChart/statsChart.js","components/pokemonModal/pokemonModal.js","components/comparison/comparison.js","images/pokedex.png","components/navBar/navBar.js","components/pokemonList/PokemonList.js","components/homePage/homePage.js","components/pageNotFound/pageNotFound.js","App.js","index.js"],"names":["actionTypes","updateComparing","type","getStringGender","index","initialState","count","next","utils","previous","pokemons","isFetching","isFetchingPokemon","firstPokemon","secondPokemon","isModalActive","isComparing","isComparisonActive","didLoadPokemons","error","pokemonReducer","state","action","payload","pokemon","dataLoaded","speciesLoaded","information","gender","description","searchContent","isMobileItemsActive","navBarReducer","combineReducers","pokemonData","navBar","composeEnhancers","composeWithDevTools","name","realtime","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","thunk","connect","props","datasetKeyProvider","key","id","data","labels","stats","map","stat","datasets","label","base_stat","backgroundColor","borderWidth","hidden","className","options","responsive","legend","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","xAxes","gridLines","dispatch","updatePokemonModalActive","informationUnits","informationClass","informationClasses","closeModal","onClick","event","stopPropagation","toUpperCase","src","alt","types","charAt","slice","Object","keys","pokeballInfo","abilities","item","ability","updateComparisonModalActive","pokemon2","updateSearch","text","changeMobileItemsStatus","to","icon","isSearchActive","placeholder","onChange","target","value","toLowerCase","updateLoadPokemon","selectPokemon","getState","fetchPokemonList","url","fetch","then","res","json","results","catch","fetchPokemon","height","weight","fetchPokemonSpecies","flavor_text_entries","flavor_text","gender_rate","dataLength","length","hasMore","filter","includes","indexOf","loading","HomePage","PageNotFound","App","basename","path","exact","component","PokemonList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35e66698.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  API_URL: 'https://pokeapi.co/api/v2',\n  SPRITES_URL:\n    'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/',\n};\n","import utils from '../../utils';\nimport store from '../store';\n\nexport const actionTypes = {\n  POKEMON_LIST_REQUEST: 'POKEMON_LIST_REQUEST',\n  POKEMON_LIST_SUCCESS: 'POKEMON_LIST_SUCCESS',\n  POKEMON_LIST_ERROR: 'POKEMON_LIST_ERROR',\n  POKEMON_REQUEST: 'POKEMON_REQUEST',\n  POKEMON_SUCCESS: 'POKEMON_SUCCESS',\n  POKEMON_ERROR: 'POKEMON_ERROR',\n  POKEMON_SPECIES_REQUEST: 'POKEMON_SPECIES_REQUEST',\n  POKEMON_SPECIES_SUCCESS: 'POKEMON_SPECIES_SUCCESS',\n  SPECIES_ERROR: 'SPECIES_ERROR',\n  MODAL_ACTIVE: 'MODAL_ACTIVE',\n  SELECT_POKEMON: 'SELECT_POKEMON',\n  UPDATE_LOAD_POKEMON: 'UPDATE_LOAD_POKEMON',\n  UPDATE_COMPARING: 'UPDATE_COMPARING',\n  COMPARISON_MODAL_ACTIVE: 'COMPARISON_MODAL_ACTIVE',\n};\n\nexport const fetchPokemonList =\n  (url = utils.API_URL + '/pokemon') =>\n  (dispatch) => {\n    dispatch({\n      type: actionTypes.POKEMON_LIST_REQUEST,\n    });\n\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({\n          type: actionTypes.POKEMON_LIST_SUCCESS,\n          payload: {\n            count: data.count,\n            next: data.next,\n            previous: data.previous,\n            pokemons: data.results,\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: actionTypes.POKEMON_LIST_ERROR,\n          payload: {\n            error: error,\n          },\n        });\n      });\n  };\n\nexport const fetchPokemon = (index) => (dispatch) => {\n  const url = utils.API_URL + '/pokemon/' + (index + 1);\n  const state = store.getState();\n  const pokemon = state.pokemonData.pokemons[index];\n\n  if (pokemon.dataLoaded && pokemon.speciesLoaded) {\n    dispatch({\n      type: actionTypes.POKEMON_SUCCESS,\n      payload: {\n        index,\n        pokemon,\n      },\n    });\n  } else {\n    dispatch({\n      type: actionTypes.POKEMON_REQUEST,\n    });\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({\n          type: actionTypes.POKEMON_SUCCESS,\n          payload: {\n            index,\n            pokemon: {\n              id: data.id,\n              name: data.name,\n              information: {\n                height: data.height / 10,\n                weight: data.weight / 10,\n              },\n              abilities: data.abilities,\n              stats: data.stats,\n              types: data.types,\n              url,\n            },\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: actionTypes.POKEMON_ERROR,\n          payload: {\n            error: error,\n          },\n        });\n      });\n  }\n};\n\nexport const fetchPokemonSpecies = (index) => (dispatch) => {\n  const url = utils.API_URL + '/pokemon-species/' + (index + 1);\n  const state = store.getState();\n  const pokemon = state.pokemonData.pokemons[index];\n\n  if (pokemon.dataLoaded && pokemon.speciesLoaded) {\n    dispatch({\n      type: actionTypes.POKEMON_SPECIES_SUCCESS,\n      payload: {\n        index,\n        description: pokemon.description,\n        gender: pokemon.information.gender,\n      },\n    });\n  } else {\n    dispatch({\n      type: actionTypes.POKEMON_SPECIES_REQUEST,\n    });\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        dispatch({\n          type: actionTypes.POKEMON_SPECIES_SUCCESS,\n          payload: {\n            index,\n            description: data.flavor_text_entries[1].flavor_text,\n            gender: getStringGender(data.gender_rate),\n          },\n        });\n      })\n      .catch((error) => {\n        dispatch({\n          type: actionTypes.SPECIES_ERROR,\n          payload: {\n            error: error,\n          },\n        });\n      });\n  }\n};\n\nexport const selectPokemon = (index) => {\n  const state = store.getState();\n  const key = !state.pokemonData.isComparing ? 'firstPokemon' : 'secondPokemon';\n\n  return {\n    type: actionTypes.SELECT_POKEMON,\n    payload: {\n      [key]: index,\n    },\n  };\n};\n\nexport const updatePokemonModalActive = () => ({\n  type: actionTypes.MODAL_ACTIVE,\n});\n\nexport const updateComparing = () => ({\n  type: actionTypes.UPDATE_COMPARING,\n});\n\nexport const updateLoadPokemon = () => ({\n  type: actionTypes.UPDATE_LOAD_POKEMON,\n});\n\nexport const updateComparisonModalActive = () => ({\n  type: actionTypes.COMPARISON_MODAL_ACTIVE,\n});\n\nconst getStringGender = (index) => {\n  if (index >= 0 && index <= 4) {\n    return 'Male';\n  } else if (index >= 4 && index <= 8) {\n    return 'Female';\n  } else if (index === -1) {\n    return 'Genderless';\n  } else {\n    return 'Unknown';\n  }\n};\n","import { actionTypes } from '../actions/pokemonActions';\nimport utils from '../../utils';\n\nconst initialState = {\n  count: 0,\n  next: utils.API_URL + '/pokemon',\n  previous: '',\n  pokemons: [],\n  isFetching: false,\n  isFetchingPokemon: false,\n  firstPokemon: 0,\n  secondPokemon: 0,\n  isModalActive: false,\n  isComparing: false,\n  isComparisonActive: false,\n  didLoadPokemons: false,\n  error: null,\n};\n\nconst pokemonReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.POKEMON_LIST_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case actionTypes.POKEMON_LIST_SUCCESS:\n      return {\n        ...state,\n        count: action.payload.count,\n        next: action.payload.next,\n        previous: action.payload.previous,\n        pokemons: [...state.pokemons, ...action.payload.pokemons],\n        isFetching: false,\n      };\n    case actionTypes.POKEMON_LIST_ERROR:\n      return {\n        ...state,\n        error: action.payload.error,\n        isFetching: false,\n      };\n    case actionTypes.POKEMON_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case actionTypes.POKEMON_SUCCESS:\n      state.pokemons[action.payload.index] = {\n        ...action.payload.pokemon,\n        dataLoaded: true,\n      };\n      return {\n        ...state,\n        isFetchingPokemon: false,\n        isModalActive:\n          !state.isComparing &&\n          state.pokemons[action.payload.index].dataLoaded &&\n          state.pokemons[action.payload.index].speciesLoaded,\n        isComparisonActive:\n          state.isComparing &&\n          state.pokemons[action.payload.index].dataLoaded &&\n          state.pokemons[action.payload.index].speciesLoaded,\n      };\n    case actionTypes.POKEMON_ERROR:\n      return {\n        ...state,\n        error: action.payload.error,\n        isFetchingPokemon: false,\n      };\n    case actionTypes.POKEMON_SPECIES_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case actionTypes.POKEMON_SPECIES_SUCCESS:\n      state.pokemons[action.payload.index] = {\n        ...state.pokemons[action.payload.index],\n        information: {\n          ...state.pokemons[action.payload.index].information,\n          gender: action.payload.gender,\n        },\n        description: action.payload.description,\n        speciesLoaded: true,\n      };\n      return {\n        ...state,\n        isFetchingPokemon: false,\n        isModalActive:\n          !state.isComparing &&\n          state.pokemons[action.payload.index].dataLoaded &&\n          state.pokemons[action.payload.index].speciesLoaded,\n        isComparisonActive:\n          state.isComparing &&\n          state.pokemons[action.payload.index].dataLoaded &&\n          state.pokemons[action.payload.index].speciesLoaded,\n      };\n    case actionTypes.SPECIES_ERROR:\n      return {\n        ...state,\n        error: action.payload.error,\n        isFetchingPokemon: false,\n      };\n    case actionTypes.SELECT_POKEMON:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case actionTypes.MODAL_ACTIVE:\n      return {\n        ...state,\n        isModalActive: !state.isModalActive,\n      };\n    case actionTypes.UPDATE_COMPARING:\n      return {\n        ...state,\n        isComparing: !state.isComparing,\n      };\n\n    case actionTypes.COMPARISON_MODAL_ACTIVE:\n      return {\n        ...state,\n        isComparisonActive: !state.isComparisonActive,\n      };\n\n    case actionTypes.UPDATE_LOAD_POKEMON:\n      return {\n        ...state,\n        didLoadPokemons: !state.didLoadPokemons,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pokemonReducer;\n","export const actionTypes = {\n  UPDATE_SEARCH: 'UPDATE_SEARCH',\n  MODIFY_MOBILE: 'MODIFY_MOBILE',\n};\n\nexport const updateSearch = (searchContent) => {\n  return {\n    type: actionTypes.UPDATE_SEARCH,\n    payload: {\n      searchContent,\n    },\n  };\n};\n\nexport const changeMobileItemsStatus = () => {\n  return {\n    type: actionTypes.MODIFY_MOBILE,\n  };\n};\n","import { actionTypes } from '../actions/navBarActions';\n\nconst initialState = {\n  searchContent: '',\n  isMobileItemsActive: false,\n};\n\nconst navBarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.UPDATE_SEARCH:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case actionTypes.MODIFY_MOBILE:\n      return {\n        ...state,\n        isMobileItemsActive: !state.isMobileItemsActive,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default navBarReducer;\n","import { combineReducers } from 'redux';\nimport pokemonData from './pokemonReducer';\nimport navBar from './navBarReducer';\n\nexport default combineReducers({\n  pokemonData,\n  navBar,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst composeEnhancers = composeWithDevTools({\n  name: 'PokeApp-pokedex',\n  realtime: true,\n  trace: true,\n  traceLimit: 20,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","export default __webpack_public_path__ + \"static/media/pokeInfo.774abbaf.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Bar } from 'react-chartjs-2';\nimport './statsChart.css';\n\nconst StatsChart = (props) => {\n  const firstPokemon =\n    props.pokemonData.pokemons[props.pokemonData.firstPokemon];\n  const secondPokemon =\n    props.pokemonData.pokemons[props.pokemonData.secondPokemon];\n\n  const datasetKeyProvider = () => {\n    let key = 'chart_' + firstPokemon.id;\n    if (secondPokemon) {\n      key += '_' + secondPokemon.id;\n    }\n    return key;\n  };\n\n  const data = {\n    labels: firstPokemon.stats.map(({ stat }) => stat.name),\n    datasets: [\n      {\n        label: firstPokemon.name,\n        data: firstPokemon.stats.map(({ base_stat }) => base_stat),\n        backgroundColor: '#008080',\n        borderWidth: 3,\n        hidden: false,\n      },\n    ],\n  };\n\n  if (props.pokemonData.isComparing) {\n    data.datasets = [\n      ...data.datasets,\n      {\n        label: secondPokemon.name,\n        data: secondPokemon.stats.map(({ base_stat }) => base_stat),\n        backgroundColor: '#3F26BF',\n        borderWidth: 3,\n        hidden: !props.pokemonData.isComparing,\n      },\n    ];\n  }\n\n  const options = {\n    responsive: true,\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            autoSkip: true,\n            maxTicksLimit: 10,\n            beginAtZero: true,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div className=\"graph\">\n      <Bar\n        id=\"stats_chart\"\n        data={data}\n        options={options}\n        datasetKeyProvider={() => datasetKeyProvider}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(StatsChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updatePokemonModalActive,\n  updateComparing,\n} from '../../redux/actions/pokemonActions';\nimport utils from '../../utils';\nimport pokeballInfo from '../../images/pokeInfo.png';\nimport Chart from '../statsChart';\nimport './pokemonModal.css';\nimport ScrollLock from 'react-scrolllock';\n\nconst PokemonModal = (props) => {\n  const pokemon = props.pokemonData.pokemons[props.pokemonData.firstPokemon];\n  const informationUnits = [' M', ' Kg', ''];\n  const informationClass = 'information-container__item';\n  const informationClasses = [\n    informationClass,\n    informationClass,\n    informationClass,\n  ];\n\n  const closeModal = () => {\n    props.updatePokemonModalActive();\n  };\n\n  const handleCardClick = (event) => {\n    event.stopPropagation();\n  };\n\n  const comparePokemon = () => {\n    props.updatePokemonModalActive();\n    props.updateComparing();\n  };\n\n  return (\n    <div>\n      {props.pokemonData.isModalActive && (\n        <ScrollLock>\n          <div className=\"modal-container\" onClick={closeModal}>\n            <div className=\"card-modal\" onClick={handleCardClick}>\n              <div className=\"pokemon-card__title\">\n                <button\n                  className=\"pokemon-card__compare\"\n                  onClick={comparePokemon}\n                >\n                  Compare To...\n                </button>\n                <button className=\"pokemon-card__close\" onClick={closeModal}>\n                  X\n                </button>\n              </div>\n              <div className=\"pokemon-container\">\n                <h2 className=\"pokemon-name\">{pokemon.name.toUpperCase()}</h2>\n                <div className=\"image-container\">\n                  <img\n                    className=\"pokemon-img\"\n                    src={utils.SPRITES_URL + pokemon.id + '.png'}\n                    alt={pokemon.name}\n                  />\n                </div>\n                <p className=\"pokemon-description\">{pokemon.description}</p>\n                <ul className=\"pokemon-types\">\n                  {pokemon.types &&\n                    pokemon.types.map((type) => (\n                      <li\n                        className={'pokemon-type ' + type.type.name}\n                        key={type.type.name}\n                      >\n                        {type.type.name.charAt(0).toUpperCase() +\n                          type.type.name.slice(1)}\n                      </li>\n                    ))}\n                </ul>\n                <div className=\"information-container\">\n                  {Object.keys(pokemon.information).map((key, index) => (\n                    <div className={informationClasses[index]}>\n                      <h3 className=\"information-container__item-value\">\n                        {pokemon.information[key] + informationUnits[index]}\n                      </h3>\n                      <h3 className=\"information-container__item-name\">\n                        {key}\n                      </h3>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"pokemon-container\">\n                <div className=\"pokemon-container__title\">\n                  <img\n                    className=\"pokemon-container__title-img\"\n                    src={pokeballInfo}\n                    alt=\"PokeballInfo\"\n                  />\n                  <h3 className=\"pokemon-container__title-text\">Abilities</h3>\n                </div>\n                <ul className=\"abilities-list\">\n                  {pokemon.abilities &&\n                    pokemon.abilities.map((item) => (\n                      <li className=\"abilities-item\" key={item.ability.name}>\n                        {item.ability.name.charAt(0).toUpperCase() +\n                          item.ability.name.slice(1)}\n                      </li>\n                    ))}\n                </ul>\n              </div>\n              <div className=\"pokemon-container\">\n                <div className=\"pokemon-container__title\">\n                  <img\n                    className=\"pokemon-container__title-img\"\n                    src={pokeballInfo}\n                    alt=\"PokeballInfo\"\n                  />\n                  <h3 className=\"pokemon-container__title-text\">Stats</h3>\n                </div>\n                <Chart className=\"chart\" />\n              </div>\n            </div>\n          </div>\n        </ScrollLock>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updatePokemonModalActive: (state) =>\n      dispatch(updatePokemonModalActive(state)),\n    updateComparing: (state) => dispatch(updateComparing(state)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateComparisonModalActive,\n  updateComparing,\n} from '../../redux/actions/pokemonActions';\nimport utils from '../../utils';\nimport pokeballInfo from '../../images/pokeInfo.png';\nimport Chart from '../statsChart';\nimport './comparison.css';\nimport ScrollLock from 'react-scrolllock';\n\nconst Comparison = (props) => {\n  const pokemon = props.pokemonData.pokemons[props.pokemonData.firstPokemon];\n  const pokemon2 = props.pokemonData.pokemons[props.pokemonData.secondPokemon];\n  const informationUnits = [' M', ' Kg', ''];\n  const informationClass = 'information-container__item';\n  const informationClasses = [\n    informationClass,\n    informationClass,\n    informationClass,\n  ];\n\n  const closeModal = () => {\n    props.updateComparing();\n    props.updateComparisonModalActive();\n  };\n\n  const handleCardClick = (event) => {\n    event.stopPropagation();\n  };\n\n  return (\n    <div>\n      {props.pokemonData.isComparisonActive && (\n        <ScrollLock>\n          <div className=\"modal-container\" onClick={closeModal}>\n            <div className=\"card\" onClick={handleCardClick}>\n              <div className=\"pokemon-card__title\">\n                <button className=\"pokemon-card__close\" onClick={closeModal}>\n                  X\n                </button>\n              </div>\n              <div className=\"pokemon-container\">\n                <div>\n                  <h2 className=\"pokemon-name\">\n                    {pokemon.name.toUpperCase()} vs{' '}\n                    {pokemon2.name.toUpperCase()}\n                  </h2>\n                </div>\n                <div className=\"comparison-image-container\">\n                  <img\n                    className=\"comparison-pokemon-img\"\n                    src={utils.SPRITES_URL + pokemon.id + '.png'}\n                    alt={pokemon.name}\n                  />\n                  <img\n                    className=\"comparison-pokemon-img\"\n                    src={utils.SPRITES_URL + pokemon2.id + '.png'}\n                    alt={pokemon2.name}\n                  />\n                </div>\n                <div className=\"information-container\">\n                  {Object.keys(pokemon.information).map((key, index) => (\n                    <div className={informationClasses[index]}>\n                      <h3 className=\"information-container__item-value\">\n                        {pokemon.information[key] + informationUnits[index]}\n                      </h3>\n                      <h3 className=\"information-container__item-name\">\n                        {key}\n                      </h3>\n                      <h3 className=\"information-container__item-value\">\n                        {pokemon2.information[key] + informationUnits[index]}\n                      </h3>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"pokemon-container\">\n                <div className=\"pokemon-container__title\">\n                  <img\n                    className=\"pokemon-container__title-img\"\n                    src={pokeballInfo}\n                    alt=\"PokeballInfo\"\n                  />\n                  <h3 className=\"pokemon-container__title-text\">Abilities</h3>\n                </div>\n                <div className=\"abilities-container\">\n                  <ul className=\"abilities-list\">\n                    {pokemon.abilities &&\n                      pokemon.abilities.map((item) => (\n                        <li className=\"abilities-item\" key={item.ability.name}>\n                          {item.ability.name.charAt(0).toUpperCase() +\n                            item.ability.name.slice(1)}\n                        </li>\n                      ))}\n                  </ul>\n                  <ul className=\"abilities-list-compare\">\n                    {pokemon2.abilities &&\n                      pokemon2.abilities.map((item) => (\n                        <li\n                          className=\"abilities-item right\"\n                          key={item.ability.name}\n                        >\n                          {item.ability.name.charAt(0).toUpperCase() +\n                            item.ability.name.slice(1)}\n                        </li>\n                      ))}\n                  </ul>\n                </div>\n              </div>\n              <div className=\"pokemon-container\">\n                <div className=\"pokemon-container__title\">\n                  <img\n                    className=\"pokemon-container__title-img\"\n                    src={pokeballInfo}\n                    alt=\"PokeballInfo\"\n                  />\n                  <h3 className=\"pokemon-container__title-text\">Stats</h3>\n                </div>\n                <Chart className=\"graph\" />\n              </div>\n            </div>\n          </div>\n        </ScrollLock>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateComparisonModalActive: (state) =>\n      dispatch(updateComparisonModalActive(state)),\n    updateComparing: (state) => dispatch(updateComparing(state)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comparison);\n","export default __webpack_public_path__ + \"static/media/pokedex.907dcf3a.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport icon from '../../images/pokedex.png';\nimport { connect } from 'react-redux';\nimport {\n  updateSearch,\n  changeMobileItemsStatus,\n} from '../../redux/actions/navBarActions';\nimport './navBar.css';\n\nconst NavBar = (props) => {\n  const handleSearch = (event) => {\n    props.updateSearch(event.target.value.toLowerCase());\n  };\n\n  const changeMobileItemsStatus = () => {\n    props.changeMobileItemsStatus();\n  };\n\n  return (\n    <div className=\"main-nav-container\">\n      <nav className=\"nav-bar\">\n        <div className=\"nav-bar-container\">\n          <NavLink to=\"/\" className=\"home-link\">\n            <img src={icon} alt=\"PokéDex\" className=\"home-link-img\" />\n          </NavLink>\n          <NavLink to=\"/pokemons\" className=\"normal-link\">\n            Pokemons\n          </NavLink>\n        </div>\n        <button className=\"burger-button\" onClick={changeMobileItemsStatus}>\n          <span className=\"burger-button-bar\" />\n          <span className=\"burger-button-bar\" />\n          <span className=\"burger-button-bar\" />\n        </button>\n        {props.isSearchActive && (\n          <input\n            className=\"search-input\"\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={handleSearch}\n          />\n        )}\n      </nav>\n      {props.navBar.isMobileItemsActive && (\n        <div className=\"mobile-bar-container\">\n          <NavLink className=\"mobile-link\" to=\"/\">\n            Home\n          </NavLink>\n          <NavLink className=\"mobile-link\" to=\"/pokemons\">\n            Pokémons\n          </NavLink>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateSearch: (text) => dispatch(updateSearch(text)),\n    changeMobileItemsStatus: () => dispatch(changeMobileItemsStatus()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport utils from '../../utils';\nimport {\n  selectPokemon,\n  fetchPokemonList,\n  fetchPokemon,\n  fetchPokemonSpecies,\n  updateLoadPokemon,\n} from '../../redux/actions/pokemonActions';\nimport PokemonModal from '../pokemonModal';\nimport Comparison from '../comparison';\nimport NavBar from '../navBar';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport './pokemonList.css';\n\nconst PokemonList = (props) => {\n  const fetchPokemonList = () => {\n    props.fetchPokemonList(props.pokemonData.next);\n  };\n\n  if (!props.pokemonData.didLoadPokemons) {\n    fetchPokemonList();\n    props.updateLoadPokemon();\n  }\n\n  const fetchPokemon = (index) => {\n    if (!props.pokemonData.isComparing) {\n      props.selectPokemon(index);\n      props.fetchPokemon(index);\n      props.fetchPokemonSpecies(index);\n    } else {\n      props.selectPokemon(index);\n      props.fetchPokemon(index);\n      props.fetchPokemonSpecies(index);\n    }\n  };\n\n  return (\n    <div className=\"pokemon-list\">\n      <NavBar isSearchActive={true} />\n      <PokemonModal />\n      <Comparison />\n      {props.pokemonData.isComparing && (\n        <div className=\"comparison-pokemon\">\n          <h2 className=\"comparison-name\">\n            Comparing:{' '}\n            {props.pokemonData.pokemons[\n              props.pokemonData.firstPokemon\n            ].name.toUpperCase()}\n          </h2>\n        </div>\n      )}\n      <InfiniteScroll\n        dataLength={props.pokemonData.pokemons.length}\n        next={fetchPokemonList}\n        hasMore={true}\n      >\n        <ul className=\"pokemon__items\">\n          {props.pokemonData.pokemons\n            .filter((item) => item.name.includes(props.navBar.searchContent))\n            .map((pokemon) => {\n              const index = props.pokemonData.pokemons.indexOf(pokemon);\n              return (\n                <li\n                  className=\"pokemon__item\"\n                  key={index}\n                  onClick={() => fetchPokemon(index)}\n                >\n                  <img\n                    loading=\"lazy\"\n                    className=\"pokemon__item-img\"\n                    src={utils.SPRITES_URL + (index + 1) + '.png'}\n                    alt={pokemon.name}\n                  />\n                  <h3 className=\"pokemon__item-name\">\n                    {pokemon.name.charAt(0).toUpperCase() +\n                      pokemon.name.slice(1)}\n                  </h3>\n                </li>\n              );\n            })}\n        </ul>\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateLoadPokemon: () => dispatch(updateLoadPokemon()),\n    selectPokemon: (index) => dispatch(selectPokemon(index)),\n    fetchPokemonList: (url) => dispatch(fetchPokemonList(url)),\n    fetchPokemon: (index, key) => dispatch(fetchPokemon(index, key)),\n    fetchPokemonSpecies: (index, key) =>\n      dispatch(fetchPokemonSpecies(index, key)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonList);\n","import React from 'react';\nimport NavBar from '../navBar';\nimport { NavLink } from 'react-router-dom';\nimport './homePage.css';\n\nconst HomePage = () => {\n  return (\n    <div className=\"home-page-container\">\n      <NavBar isSearchActive={false} />\n      <div className=\"home-container\">\n        <div className=\"home-card\">\n          <div className=\"home-message-container\">\n            <h1 className=\"home-message\">WELCOME TO THE POKEDEX</h1>\n            <NavLink to=\"/pokemons\" className=\"home-button\"></NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './pageNotFound.css';\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"main-container\">\n      <div className=\"container\">\n        <h1 className=\"sorry-title\">SORRY!</h1>\n        <h2 className=\"page-not-found\">Page Not Found</h2>\n        <NavLink to=\"/pokemons\" className=\"back-button\">\n          POKEDEX\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport store from './redux/store';\nimport PokemonList from './components/pokemonList';\nimport HomePage from './components/homePage';\nimport PageNotFound from './components/pageNotFound';\n\nconst App = () => (\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/pokemons\" component={PokemonList} />\n        <Route path=\"*\" exact component={PageNotFound} />\n      </Switch>\n    </HashRouter>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}